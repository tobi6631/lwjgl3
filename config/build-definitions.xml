<project name="definitions" basedir="../">
	<!-- ================================================================== -->
	<!-- Global properties for build 																				-->
	<!-- ================================================================== -->
	<property environment="env"/>

	<fail unless="env.JAVA7_HOME" message="Please set an environment variable named JAVA7_HOME that points to a Java 7 SDK."/>

	<!--
		MAJOR.MINOR.REVISION
		[0-9].[0-9].[0-9]+[ab]?
	-->
	<property name="build.version" value="3.0.0a"/>
	<!--
		This is used as the source of binary dependencies. Valid values:
		- nightly
			the latest successful build. Dependency repos can be found here: https://github.com/LWJGL-CI
		- stable
			the latest nightly build that has been verified to work with LWJGL.
			this is the default, set the LWJGL_BUILD_TYPE environment variable to override.
		- release/latest
			the latest stable build that has been promoted to an official LWJGL release.
		- release/{build.version}
			a specific previously released build.
	 -->
	<condition property="build.type" value="${env.LWJGL_BUILD_TYPE}" else="stable">
		<isset property="env.LWJGL_BUILD_TYPE"/>
	</condition>

	<property name="src" location="src" relative="true"/>
	<property name="generated" location="generated" relative="false"/>
	<property name="bin" location="bin" relative="false"/>
	<property name="lib" location="libs" relative="true"/>
	<property name="lib.abs" location="${lib}" relative="false"/>
	<property name="res" location="res" relative="true"/>

	<property name="src.core" location="${src}/core" relative="true"/>
	<property name="src.util" location="${src}/util" relative="true"/>
	<property name="src.templates" location="${src}/templates" relative="true"/>
	<property name="src.tests" location="${src}/tests" relative="true"/>

	<property name="src.native" location="${src}/native" relative="true"/>
	<property name="src.native.abs" location="${src.native}" relative="false"/>

	<property name="kotlinc" location="${lib}/kotlinc" relative="true"/>

	<property name="generated.java" location="${generated}/java" relative="true"/>
	<property name="generated.native" location="${generated}/native" relative="true"/>
	<property name="generated.tests" location="${generated}/tests" relative="true"/>
	<property name="generated.javadoc" location="${generated}/javadoc" relative="true"/>

	<property name="bin.core" location="${bin}/Core" relative="true"/>
	<property name="bin.util" location="${bin}/Utilities" relative="true"/>
	<property name="bin.templates" location="${bin}/Templates" relative="true"/>
	<property name="bin.tests" location="${bin}/Tests" relative="true"/>

	<!--
		The target native architecture. Must be either x86 or x64. By default, os.arch of the JVM
		that runs ANT is used, but this can be overriden for cross-compiling to another architecture.
	-->
	<condition property="build.arch" value="${env.LWJGL_BUILD_ARCH}">
		<isset property="env.LWJGL_BUILD_ARCH"/>
	</condition>
	<condition property="build.arch" value="x64" else="x86"> <!-- Normalize os.arch -->
		<and>
			<not><isset property="build.arch"/></not>
			<contains string="${os.arch}" substring="64"/>
		</and>
	</condition>

	<!--
		Offline build flag. This is useful when working offline, or when custom binary dependencies
		are used (so they are not overriden). Set to one of true/on/yes to enable.
	-->
	<condition property="build.offline" value="${env.LWJGL_BUILD_OFFLINE}" else="false">
		<isset property="env.LWJGL_BUILD_OFFLINE"/>
	</condition>

	<condition property="platform.windows">
		<os family="Windows"/>
	</condition>
	<condition property="platform.linux">
		<os name="Linux"/>
	</condition>
	<condition property="platform.freebsd">
		<os name="FreeBSD"/>
	</condition>
	<condition property="platform.solaris">
		<os name="SunOS"/>
	</condition>
	<condition property="platform.macosx">
		<os name="Mac OS X"/>
	</condition>

	<condition property="platform" value="windows">
		<isset property="platform.windows"/>
	</condition>
	<condition property="platform" value="linux">
		<isset property="platform.linux"/>
	</condition>
	<condition property="platform" value="freebsd">
		<isset property="platform.freebsd"/>
	</condition>
	<condition property="platform" value="solaris">
		<isset property="platform.solaris"/>
	</condition>
	<condition property="platform" value="macosx">
		<isset property="platform.macosx"/>
	</condition>

	<!-- Different location per platform/architecture. This is intentional. -->
	<property name="bin.native" location="${bin}/${platform}/${build.arch}" relative="true"/>

	<macrodef name="quiet">
		<element name="body" implicit="yes"/>
		<sequential>
			<script language="javascript">
			project.getBuildListeners().firstElement().setMessageOutputLevel(org.apache.tools.ant.Project.MSG_WARN);
			</script>
			<body/>
			<script language="javascript">
			project.getBuildListeners().firstElement().setMessageOutputLevel(org.apache.tools.ant.Project.MSG_INFO);
			</script>
		</sequential>
	</macrodef>

	<macrodef name="update">
		<attribute name="name"/>
		<attribute name="url"/>
		<attribute name="dest"/>

		<sequential>
			<quiet>
				<get taskname="@{name}" src="@{url}" dest="@{dest}" verbose="false" usetimestamp="true"/>
			</quiet>
		</sequential>
	</macrodef>

	<macrodef name="update-mvn">
		<attribute name="name"/>
		<attribute name="group"/>
		<attribute name="artifact"/>
		<attribute name="version"/>
		<attribute name="dest"/>

		<sequential>
			<update
				name="@{name}"
				url="http://repo1.maven.org/maven2/@{group}/@{artifact}/@{version}/@{artifact}-@{version}.jar" dest="@{dest}/@{artifact}.jar"/>
		</sequential>
	</macrodef>

	<macrodef name="update-dependency">
		<attribute name="name"/>
		<attribute name="artifact"/>

		<sequential>
			<update name="@{name}" url="http://s3.amazonaws.com/build.lwjgl.org/${build.type}/${platform}/@{artifact}" dest="${lib}/${platform}/@{artifact}"/>
		</sequential>
	</macrodef>
</project>
