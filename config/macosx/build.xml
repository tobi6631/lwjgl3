<project name="lwjgl native code" basedir="../.." default="compile-native-macosx">
	<import file="../build-definitions.xml"/>

	<property name="libname" value="liblwjgl.dylib"/>

	<!-- Ask Xcode for correct path to XCode tools -->
	<!-- Will fail if XCode Command Line Tools are not installed on 10.7+ (Lion) -->
	<exec executable="xcode-select" outputproperty="developer_path" errorproperty="xcode-error" failonerror="false" failifexecutionfails="false">
		<arg value="--print-path"/>
	</exec>
	<!-- Default to /Developer if xcode-select fails -->
	<condition property="developer_path" value="/Developer">
		<isset property="xcode-error"/>
	</condition>

	<!-- Choose a MacOSX SDK -->
	<macrodef name="find-sdkroot">
		<attribute name="version"/>

		<sequential>
			<condition property="sdkroot" value="${developer_path}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX@{version}.sdk">
				<and>
					<not><isset property="sdkroot"/></not>
					<available file="${developer_path}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX@{version}.sdk" type="dir"/>
				</and>
			</condition>
		</sequential>
	</macrodef>

	<property name="compiler" value="clang"/> <!-- Use clang on 10.8 or newer -->
	<find-sdkroot version="10.10"/>
	<find-sdkroot version="10.9"/>
	<find-sdkroot version="10.8"/>
	<condition property="compiler" value="gcc"><not><isset property="sdkroot"/></not></condition> <!-- Use gcc on 10.7 -->
	<find-sdkroot version="10.7"/>
	<fail unless="sdkroot" message="Failed to find the MacOS X SDK."/>

	<fileset id="link-objects" dir="${bin.native}" includes="*.o"/>
	<fileset id="link-libraries" dir="${lib.abs}/macosx/${build.arch}/" includes="*.a"/>

	<property name="macosx-version-min" value="10.7"/>

	<target name="compile-native-macosx">
		<echo message="${sdkroot}" taskname="SDK Root"/>
		<!-- COMPILE -->
		<property name="warnings" value="-Werror -Wfatal-errors -Wall -Wextra -pedantic -Wno-extended-offsetof"/>

		<apply dir="${bin.native}" executable="${compiler}" dest="${bin.native}" skipemptyfilesets="true" failonerror="true" parallel="true" taskname="Compiler">
			<arg line="-c -std=c99 -O3 -fPIC ${warnings} -DLWJGL_MACOSX -isysroot ${sdkroot} -mmacosx-version-min=${macosx-version-min}"/>
			<arg value="-I${sdkroot}/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers"/>

			<!-- Paths relative to dir -->
			<arg value="-I${src.native.abs}/system"/>
			<arg value="-I${src.native.abs}/system/macosx"/>
			<arg value="-I${src.native.abs}/system/libffi"/>
			<arg value="-I${src.native.abs}/system/glfw"/>
			<arg value="-I${src.native.abs}/openal"/>
			<arg value="-I${src.native.abs}/opencl"/>
			<arg value="-I${src.native.abs}/opengl"/>

			<!-- Paths relative to basedir -->
			<fileset dir="${src.native}/system" includes="*.c"/>
			<fileset dir="${src.native}/system/macosx" includes="*.c"/>
			<fileset dir="${src.native}/system/macosx" includes="*.m"/>
			<fileset dir="${src.native}/system/libffi" includes="*.c"/>
			<fileset dir="${src.native}/system/glfw" includes="*.c"/>
			<fileset dir="${src.native}/opencl" includes="*.c"/>
			<fileset dir="${src.native}/opengl" includes="*.c"/>
			<fileset dir="${generated.native}/system" includes="*.c"/>
			<fileset dir="${generated.native}/system/macosx" includes="*.c"/>
			<fileset dir="${generated.native}/system/macosx" includes="*.m"/>
			<fileset dir="${generated.native}/system/libffi" includes="*.c"/>
			<fileset dir="${generated.native}/system/glfw" includes="*.c"/>
			<fileset dir="${generated.native}/openal" includes="*.c"/>
			<fileset dir="${generated.native}/opencl" includes="*.c" excludes="*CL20.c"/>
			<fileset dir="${generated.native}/opengl" includes="*.c"/>

			<regexpmapper from="^(.*)\.(c|m)" to="\1.o"/>
		</apply>

		<!-- LINK -->
		<uptodate property="link-uptodate" targetfile="${bin.native}/${libname}">
			<srcfiles refid="link-objects"/>
			<srcfiles refid="link-libraries"/>
		</uptodate>

		<antcall target="-link-if-necessary"/>
	</target>

	<target name="-link-if-necessary" unless="link-uptodate">
		<antcall target="-link"/>
	</target>

	<target name="-update-dependencies" unless="${build.offline}">
		<mkdir dir="${lib}/macosx"/>
		<mkdir dir="${lib}/macosx/x64"/>

		<update-dependency name="OpenAL32" artifact="x64/libopenal.dylib"/>
		<update-dependency name="glfw3" artifact="x64/libglfw3.a"/>
		<update-dependency name="libffi" artifact="x64/libffi.a"/>
	</target>

	<target name="-link" depends="-update-dependencies">
		<apply dir="${bin.native}" executable="gcc" failonerror="true" parallel="true" taskname="Linker">
			<srcfile/>
			<arg line='-dynamiclib -mmacosx-version-min=${macosx-version-min} -o ${libname}'/>
			<arg line="-framework AppKit"/>
			<arg line="-framework CoreFoundation"/>
			<arg line="-framework CoreVideo"/>
			<arg line="-framework Cocoa"/>
			<arg line="-framework IOKit"/>
			<arg line="-framework OpenGL"/>

			<fileset refid="link-objects"/>
			<fileset refid="link-libraries"/>
		</apply>
	</target>
</project>
